name: Sync GitLab Activity to GitHub

on:
  workflow_dispatch:
  schedule:
    - cron: '0 0 * * 0' # Exécute chaque dimanche à minuit

jobs:
  sync_activity:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: '3.x'

      - name: Install Python dependencies
        run: |
          python -m pip install --upgrade pip
          pip install requests

      - name: Fetch and Process GitLab Activity
        env:
          GITLAB_TOKEN: ${{ secrets.GITLAB_TOKEN }}
          GITLAB_USER_ID: ${{ secrets.GITLAB_USER_ID }} # Utilise maintenant le secret pour l'ID utilisateur
        run: |
          import requests
          import datetime
          import os
          import subprocess

          # Configurez pour récupérer les activités depuis une date spécifique ou toute l'activité
          start_date = datetime.date(2015, 1, 1)  # Date très antérieure pour simuler "toute l'activité"
          end_date = datetime.date.today()
          date_format = "%Y-%m-%d"

          # URL de l'API GitLab pour les événements utilisateur
          url = f"https://aws-git.inadvans.com/api/v4/users/{os.getenv('GITLAB_USER_ID')}/events?after={start_date.strftime(date_format)}&before={end_date.strftime(date_format)}"

          headers = {"Authorization": f"Bearer {os.getenv('GITLAB_TOKEN')}"}
          response = requests.get(url, headers=headers)
          if response.status_code == 200:
              activities = response.json()

              # Configuration de Git avec votre email et nom
              os.system('git config --global user.email "hydris.bessa@gmail.com"')
              os.system('git config --global user.name "Hydris Bessa"')

              # Traitement simple pour démonstration - à personnaliser
              for activity in activities:
                  # Créer un commit vide pour chaque activité GitLab
                  subprocess.run(["git", "commit", "--allow-empty", "-m", f"GitLab activity: {activity['action_name']} on {activity['created_at']}"])
          else:
              print(f"Erreur lors de la récupération des activités: {response.status_code}")
              print(f"Détails: {response.text}")

          # Pousser les commits au référentiel GitHub
          os.system('git push')
        shell: python
